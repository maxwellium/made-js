function url(){var e="ws://";return"https:"===window.location.protocol&&(e="wss://"),e+window.location.host+"/ws"}function _arrayBufferToBase64(e){for(var t="",n=new Uint8Array(e),r=n.byteLength,o=0;r>o;o++)t+=String.fromCharCode(n[o]);return window.btoa(t)}function _base64ToArrayBuffer(e){var t=window.atob(e),n=t.length;console.log(n);for(var r=new Uint8Array(n),o=0;n>o;o++)r[o]=t.charCodeAt(o);return r}function File(e,t){var n={made:e,ctx:t,seek:0,data:null};return n.readAll=function(){var e=angular.injector(["ng"]),t=e.get("$q"),r=t.defer();return n.made.request("rpc://crm/file/read",[n.ctx.filename]).then(function(e){n.data=_base64ToArrayBuffer(e.data),console.log(n.data.length),r.resolve(n.data)}),r.promise},n.read=function(e,t){var r=angular.injector(["ng"]),o=r.get("$q"),a=o.defer();return n.made.request("rpc://crm/file/read",[n.ctx.filename,e,t]).then(function(e){a.resolve(e.data)}),a.promise},n.append=function(e){var t=angular.injector(["ng"]),r=t.get("$q"),o=r.defer();return n.made.request("rpc://crm/file/append",[n.ctx.filename,e]).then(function(e){n.ctx=e.data,o.resolve()}),n.data+=e,o.promise},n.store=function(){function e(t){if(t<n.data.byteLength){var r=n.data.slice(t,t+n.ctx.chunk_size),c=_arrayBufferToBase64(r);a.send(c),setTimeout(function(){e(t+n.ctx.chunk_size)},300)}else a.send("done-writing"),a.asyncRecv().then(function(e){LOGGING&&console.log("finished uploading"),n.ctx=e,o.resolve()})}var t=angular.injector(["ng"]),r=t.get("$q"),o=r.defer(),a=n.made.channel("file://crm/"+n.ctx.filename);return e(0),o.promise},n.save=function(){function e(){var e=document.createElement("a"),t=window.URL.createObjectURL(new Blob([n.data],{type:"octet/stream"}));if(e.setAttribute("href",t),e.setAttribute("download",n.ctx.filename),document.createEvent){var r=document.createEvent("MouseEvents");r.initEvent("click",!0,!0),e.dispatchEvent(r)}else e.click()}n.data,e()},n.remove=function(){n.made.request("rpc://crm/file/remove",[n.ctx.filename])},n}function Channel(e,t,n){var r=angular.injector(["ng"]),o={made:e,uri:t,context:n,buffer:[],q:r.get("$q"),listener:null,send:function(e){return o.made.send_with_context("channel",{type:"package","package":e},o.context)},recv:function(){return o.buffer.shift()},handleRecv:function(e){o.buffer.push(e),o.listener&&(o.listener.resolve(o.buffer.shift()),o.listener=null)},asyncRecv:function(){return o.listener=o.q.defer(),o.listener.promise},resolve:function(e){LOGGING&&console.log("channel-error",e.error),o.handleClose()},handleClose:function(){console.log("close channel "+o.context),delete o.made.contexts[o.context],o.listener&&o.listener.resolve(null)},close:function(){o.made.send_with_context("channel",{type:"close"},o.context),o.handleClose()}};return e.contexts[o.context]=o,e.send_with_context("channel",{type:"open",uri:t},o.context),o}var madejs=angular.module("made-js",["uuid4","ngCookies"]),LOGGING=!0;madejs.service("Made",function(e,t,n,r,o){function a(){l.wss=new WebSocket(url()),l.user=n.get("user"),void 0===l.user&&(l.user=null),l.wss.onopen=function(){LOGGING&&console.log("socket open!")},l.wss.onerror=function(e){console.log("socket error: ",e)},l.wss.onclose=function(){setTimeout(a,l.reconnect_timeout),l.reconnect_timeout<12e4&&2*l.reconnect_timeout},l.wss.onmessage=function(e){switch(e=JSON.parse(e.data),LOGGING&&console.log("-- received --"+(e.error?"ERROR":""),e),e.action){case"answer":if(e.context in i){if(e.success)i[e.context].resolve(e);else{for(l.errors.push(e);l.errors.length>10;)l.errors.shift();i[e.context].reject&&i[e.context].reject(e),r.$broadcast("made-error",e),"15c3ad4d828c5937a721893351c767fd"==e.error.id&&l.logout()}delete i[e.context]}else LOGGING&&console.log("made-js error: message for unknown context");break;case"request":var t=e.data.path.join("."),n=subspaces[t],o=n(e.data.args,e.data.kwargs);answer(e,o,null);break;case"channel":switch(e.data.type){case"open":console.log("!!!FATAL!!! Opening channel to browser not allowed!");break;case"package":e.context in i?i[e.context].handleRecv(e.data["package"]):LOGGING&&console.log("package for unknown channel");break;case"close":e.context in i?i[e.context].handleClose():LOGGING&&console.log("close for unknown channel")}}}}function c(e,t){return{user:l.user,context:0,action:e,data:t,error:null,success:!0}}function s(e){function t(){LOGGING&&console.log("made-js - wait for connect"),setTimeout(function(){s(e)},750)}if(l.wss)switch(l.wss.readyState){case WebSocket.CONNECTING:t();break;case WebSocket.OPEN:l.reconnect_timeout=1e3,e();break;default:LOGGING&&console.log("made-js: try to send over a closed socket!")}else t()}var i={},l=this;this.user=null,this.contexts=i,this.wss=null,this.errors=[],a(),this.afterConnect=s,this.send=function(e,n){var r=t.defer(),a=o.generate();return i[a]=r,l.send_with_context(e,n,a),r.promise},this.send_with_context=function(e,t,n){var r=c(e,t);r.context=n,LOGGING&&("request"==r.action?console.log("-- sending --",r.data.uri,r):console.log("-- sending --",r.action,r));var o=angular.toJson(r);s(function(){l.wss.send(o)})},this.request=function(e,t){"undefined"==typeof t&&(t={});var n={uri:e,kwargs:t};return l.send("request",n)},this.channel=function(e){var t=Channel(l,e,o.generate());return t},this.topology=function(){var e=t.defer();return l.send("topology",{}).then(function(t){var n=t.data;e.resolve(n)}),e.promise},this.capabilities=function(){var e=t.defer();return l.send("capabilities").then(function(t){var n=t.data;e.resolve(n)}),e.promise},this.schema=function(e){var n=t.defer();return l.send("schema",e).then(function(e){n.resolve(e.data)}),n.promise},this.fileFromData=function(e,t){var n={filename:e,chunk_size:261120,length:t.byteLength,md5:"",encoding:"utf-8",meta:{}},r=File(l,n);return r.data=t,r},this.loginByName=function(e,r){if(e&&r)return defer=t.defer(),l.request("rpc://crm/user/login",{user:e,password:r}).then(function(e){e.success&&(l.user=e.data,n.put("user",l.user)),defer.resolve(e)}),defer.promise;throw"username and password are requiered to not be empty"},this.loginByEmail=function(e,t){return l.request("rpc://crm/user/login",{email:e,password:t}).then(function(e){return l.user=e.data,n.put("user",l.user),e})},this.logout=function(){l.user&&(l.request("rpc://crm/user/logout"),l.user=null,n.put("user",null))},this.isLoggedin=function(){return null!==l.user}}),madejs.directive("madeStoreFile",function(e,t){return{restrict:"A",scope:{madeStoreFile:"=",itemId:"=mfsItemId",callback:"&mfsCallback"},link:function(n,r){r.on("change",function(r){var o=[],a=r.srcElement||r.target;"object"!=typeof n.madeStoreFile[n.itemId]&&(n.madeStoreFile[n.itemId]=[]),Array.prototype.slice.call(a.files).forEach(function(r){var a=e.defer(),c=new FileReader;c.onload=function(e){n.madeStoreFile[n.itemId].push(t.fileFromData(r.name,e.target.result)),n.$apply(),a.resolve()},c.onabort=c.onerror=function(e){console.log("madeStoreFileDirective, FileReader aborted:",e),a.reject(e)},o.push(a.promise),c.readAsArrayBuffer(r)}),e.all(o).then(function(){n.callback()})})}}}),madejs.directive("madeTopology",function(){var e=640,t=480,n=d3.scale.category20(),r=d3.layout.force().charge(-120).linkDistance(60).size([e,t]);return{restrict:"E",scope:{data:"="},link:function(o,a){var c=d3.select(a[0]).append("svg").attr("width",e).attr("height",t),s=null,i=null;o.$watch("data",function(e){if(LOGGING&&console.log("made-topology nodes",e),c.selectAll("*").remove(),e){s=e.nodes,i=e.links,r.nodes(s),r.links(i),r.start();var t=c.selectAll(".topology-link").data(i).enter().append("line").attr("class","topology-link"),o=c.selectAll(".topology-node").data(s).enter().append("circle").attr("class","topology-node").attr("r",15).style("fill",function(e){return n(e.type)}).call(r.drag);r.on("tick",function(){t.attr("x1",function(e){return e.source.x}).attr("y1",function(e){return e.source.y}).attr("x2",function(e){return e.target.x}).attr("y2",function(e){return e.target.y}),o.attr("cx",function(e){return e.x}).attr("cy",function(e){return e.y})})}})}}}),madejs.directive("madeTopologyLegend",function(){var e=d3.scale.category20();return{restrict:"E",scope:{data:"="},link:function(t,n){var r=d3.select(n[0]).append("div");t.$watch("data",function(t){LOGGING&&console.log("made-topology-legend nodes",t),r.selectAll("*").remove(),t&&r.selectAll("div").data(t.nodes).enter().append("div").text(function(e){return e.type}).append("div").attr("class","topology-legend-box").style("background-color",function(t){return e(t.type)})})}}});