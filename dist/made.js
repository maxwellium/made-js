"use strict";function url(){var prot="ws://";return"https:"===window.location.protocol&&(prot="wss://"),prot+window.location.host+"/ws"}function _arrayBufferToBase64(buffer){for(var binary="",bytes=new Uint8Array(buffer),len=bytes.byteLength,i=0;len>i;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}function _base64ToArrayBuffer(base64){var binary_string=window.atob(base64),len=binary_string.length;console.log(len);for(var bytes=new Uint8Array(len),i=0;len>i;i++)bytes[i]=binary_string.charCodeAt(i);return bytes}function File(made,fctx){var me={made:made,ctx:fctx,seek:0,data:null};return me.readAll=function(){var $injector=angular.injector(["ng"]),$q=$injector.get("$q"),defer=$q.defer();return me.made.request("rpc://crm/file/read",[me.ctx.filename]).then(function(result){me.data=_base64ToArrayBuffer(result.data),console.log(me.data.length),defer.resolve(me.data)}),defer.promise},me.read=function(pos,length){var $injector=angular.injector(["ng"]),$q=$injector.get("$q"),defer=$q.defer();return me.made.request("rpc://crm/file/read",[me.ctx.filename,pos,length]).then(function(result){defer.resolve(result.data)}),defer.promise},me.append=function(data){var $injector=angular.injector(["ng"]),$q=$injector.get("$q"),defer=$q.defer();return me.made.request("rpc://crm/file/append",[me.ctx.filename,data]).then(function(result){me.ctx=result.data,defer.resolve()}),me.data+=data,defer.promise},me.store=function(){function upload(idx){if(idx<me.data.byteLength){var chunk=me.data.slice(idx,idx+me.ctx.chunk_size),encoded=_arrayBufferToBase64(chunk);channel.send(encoded),setTimeout(function(){upload(idx+me.ctx.chunk_size)},300)}else channel.send("done-writing"),channel.asyncRecv().then(function(data){LOGGING&&console.log("finished uploading"),me.ctx=data,defer.resolve()})}var $injector=angular.injector(["ng"]),$q=$injector.get("$q"),defer=$q.defer(),channel=me.made.channel("file://crm/"+me.ctx.filename);return upload(0),defer.promise},me.save=function(){function do_save(){var pom=document.createElement("a"),url=window.URL.createObjectURL(new Blob([me.data],{type:"octet/stream"}));if(pom.setAttribute("href",url),pom.setAttribute("download",me.ctx.filename),document.createEvent){var event=document.createEvent("MouseEvents");event.initEvent("click",!0,!0),pom.dispatchEvent(event)}else pom.click()}me.data,do_save()},me.remove=function(){me.made.request("rpc://crm/file/remove",[me.ctx.filename])},me}function Channel(made,uri,context){var $injector=angular.injector(["ng"]),ctx={made:made,uri:uri,context:context,buffer:[],q:$injector.get("$q"),listener:null,send:function(data){return ctx.made.send_with_context("channel",{type:"package","package":data},ctx.context)},recv:function(){return ctx.buffer.shift()},handleRecv:function(data){ctx.buffer.push(data),ctx.listener&&(ctx.listener.resolve(ctx.buffer.shift()),ctx.listener=null)},asyncRecv:function(){return ctx.listener=ctx.q.defer(),ctx.listener.promise},resolve:function(msg){LOGGING&&console.log("channel-error",msg.error),ctx.handleClose()},handleClose:function(){console.log("close channel "+ctx.context),delete ctx.made.contexts[ctx.context],ctx.listener&&ctx.listener.resolve(null)},close:function(){ctx.made.send_with_context("channel",{type:"close"},ctx.context),ctx.handleClose()}};return made.contexts[ctx.context]=ctx,made.send_with_context("channel",{type:"open",uri:uri},ctx.context),ctx}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj},madejs=angular.module("made-js",["uuid4","ngCookies"]);madejs.config(["$compileProvider",function($compileProvider){$compileProvider.directive("madeCompile",function($compile){return function(scope,element,attrs){scope.$watch(function(scope){return scope.$eval(attrs.madeCompile)},function(value){element.html(value),$compile(element.contents())(scope)})}})}]);var LOGGING=!0;madejs.service("Made",function($http,$q,$cookieStore,$rootScope,uuid4){function setup_socket(){made.wss=new WebSocket(url()),made.user=$cookieStore.get("user"),void 0===made.user&&(made.user=null),made.wss.onopen=function(){LOGGING&&console.log("socket open!")},made.wss.onerror=function(error){console.log("socket error: ",error)},made.wss.onclose=function(){setTimeout(setup_socket,made.reconnect_timeout),made.reconnect_timeout<12e4&&2*made.reconnect_timeout},made.wss.onmessage=function(msg){switch(msg=JSON.parse(msg.data),LOGGING&&console.log("-- received --"+(msg.error?"ERROR":""),msg),msg.action){case"answer":if(msg.context in contexts){if(msg.success)contexts[msg.context].resolve(msg);else{for(made.errors.push(msg);made.errors.length>10;)made.errors.shift();contexts[msg.context].reject&&contexts[msg.context].reject(msg),$rootScope.$broadcast("made-error",msg),"15c3ad4d828c5937a721893351c767fd"==msg.error.id&&made.logout()}delete contexts[msg.context]}else LOGGING&&console.log("made-js error: message for unknown context");break;case"request":var path=msg.data.path.join("."),callback=subspaces[path],result=callback(msg.data.args,msg.data.kwargs);answer(msg,result,null);break;case"channel":switch(msg.data.type){case"open":console.log("!!!FATAL!!! Opening channel to browser not allowed!");break;case"package":msg.context in contexts?contexts[msg.context].handleRecv(msg.data["package"]):LOGGING&&console.log("package for unknown channel");break;case"close":msg.context in contexts?contexts[msg.context].handleClose():LOGGING&&console.log("close for unknown channel")}}}}function message(action,data){return{user:made.user,context:0,action:action,data:data,error:null,success:!0}}function when_connected(callback){function wait(){LOGGING&&console.log("made-js - wait for connect"),setTimeout(function(){when_connected(callback)},750)}if(made.wss)switch(made.wss.readyState){case WebSocket.CONNECTING:wait();break;case WebSocket.OPEN:made.reconnect_timeout=1e3,callback();break;default:LOGGING&&console.log("made-js: try to send over a closed socket!")}else wait()}var contexts={},made=this;this.user=null,this.contexts=contexts,this.wss=null,this.errors=[],setup_socket(),this.afterConnect=when_connected,this.send=function(action,data){var defer=$q.defer(),context=uuid4.generate();return contexts[context]=defer,made.send_with_context(action,data,context),defer.promise},this.send_with_context=function(action,data,context){var msg=message(action,data);msg.context=context,LOGGING&&("request"==msg.action?console.log("-- sending --",msg.data.uri,msg):console.log("-- sending --",msg.action,msg));var encoded=angular.toJson(msg);when_connected(function(){made.wss.send(encoded)})},this.request=function(uri,kwargs){"undefined"==typeof kwargs&&(kwargs={});var data={uri:uri,kwargs:kwargs};return made.send("request",data)},this.channel=function(uri){var channel=Channel(made,uri,uuid4.generate());return channel},this.topology=function(){var defer=$q.defer();return made.send("topology",{}).then(function(result){var data=result.data;defer.resolve(data)}),defer.promise},this.capabilities=function(){var defer=$q.defer();return made.send("capabilities").then(function(result){var data=result.data;defer.resolve(data)}),defer.promise},this.schema=function(url){var defer=$q.defer();return made.send("schema",url).then(function(result){defer.resolve(result.data)}),defer.promise},this.fileFromData=function(name,data){var fctx={filename:name,chunk_size:261120,length:data.byteLength,md5:"",encoding:"utf-8",meta:{}},file=File(made,fctx);return file.data=data,file},this.loginByName=function(username,password){if(username&&password)return defer=$q.defer(),made.request("rpc://crm/user/login",{user:username,password:password}).then(function(result){result.success&&(made.user=result.data,$cookieStore.put("user",made.user)),defer.resolve(result)}),defer.promise;throw"username and password are requiered to not be empty"},this.loginByEmail=function(email,password){return made.request("rpc://crm/user/login",{email:email,password:password}).then(function(result){return made.user=result.data,$cookieStore.put("user",made.user),result})},this.logout=function(){made.user&&(made.request("rpc://crm/user/logout"),made.user=null,$cookieStore.put("user",null))},this.isLoggedin=function(){return null!==made.user}}),madejs.directive("madeStoreFile",function($q,Made){return{restrict:"A",scope:{madeStoreFile:"=",itemId:"=mfsItemId",callback:"&mfsCallback"},link:function(scope,element){element.on("change",function(onChangeEvent){var filePromises=[],element=onChangeEvent.srcElement||onChangeEvent.target;"object"!==_typeof(scope.madeStoreFile[scope.itemId])&&(scope.madeStoreFile[scope.itemId]=[]),Array.prototype.slice.call(element.files).forEach(function(file){var deferred=$q.defer(),reader=new FileReader;reader.onload=function(onLoadEvent){scope.madeStoreFile[scope.itemId].push(Made.fileFromData(file.name,onLoadEvent.target.result)),scope.$apply(),deferred.resolve()},reader.onabort=reader.onerror=function(error){console.log("madeStoreFileDirective, FileReader aborted:",error),deferred.reject(error)},filePromises.push(deferred.promise),reader.readAsArrayBuffer(file)}),$q.all(filePromises).then(function(){scope.callback()})})}}}),madejs.directive("madeTopology",function(){var width=640,height=480,color=d3.scale.category20(),force=d3.layout.force().charge(-120).linkDistance(60).size([width,height]);return{restrict:"E",scope:{data:"="},link:function(scope,element){var svg=d3.select(element[0]).append("svg").attr("width",width).attr("height",height),nodes=null,links=null;scope.$watch("data",function(newVal){if(LOGGING&&console.log("made-topology nodes",newVal),svg.selectAll("*").remove(),newVal){nodes=newVal.nodes,links=newVal.links,force.nodes(nodes),force.links(links),force.start();var link=svg.selectAll(".topology-link").data(links).enter().append("line").attr("class","topology-link"),node=svg.selectAll(".topology-node").data(nodes).enter().append("circle").attr("class","topology-node").attr("r",15).style("fill",function(d){return color(d.type)}).call(force.drag);force.on("tick",function(){link.attr("x1",function(d){return d.source.x}).attr("y1",function(d){return d.source.y}).attr("x2",function(d){return d.target.x}).attr("y2",function(d){return d.target.y}),node.attr("cx",function(d){return d.x}).attr("cy",function(d){return d.y})})}})}}}),madejs.directive("madeTopologyLegend",function(){var color=d3.scale.category20();return{restrict:"E",scope:{data:"="},link:function(scope,element){var list=d3.select(element[0]).append("div");scope.$watch("data",function(newVal){LOGGING&&console.log("made-topology-legend nodes",newVal),list.selectAll("*").remove(),newVal&&list.selectAll("div").data(newVal.nodes).enter().append("div").text(function(d){return d.type}).append("div").attr("class","topology-legend-box").style("background-color",function(d){return color(d.type)})})}}});